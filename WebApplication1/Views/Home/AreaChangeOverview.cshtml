@model List<WebApplication1.Data.GeoChange>
@{
    ViewData["Title"] = "Overview";
}

<h2>Overview of Registered Changes</h2>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>GeoJSON</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var change in Model)
        {
            <tr>
                <td>@change.Id</td>
                <td>@change.GeoJson</td>
                <td>@change.Description</td>
            </tr>
        }
    </tbody>
</table>


<div id="map" style="height: 400px;"></div>


<div class="container mt-5">
    <h2 class="text-center">Oversikt over innsendte meldinger</h2>
</div>

<div class="container mt-5">
    <div class="row">
        <!-- Left Side: Map -->
        <div class="col-md-6">
            <div id="map" style="height: 500px; width: 100%; border: 3px solid #ccc;"></div>
        </div>

      @*   <!-- Right Side: Details Table -->
        <div class="col-md-6">
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Beskrivelse</th>
                        <th>Email</th>
                        <th>Status</th>
                        <th>Kommune</th>
                        <th>Fylke</th>
                        <th>Karttype</th>
                        <th>Rediger</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var change in Model)
                    {
                        <tr>
                            <td>@change.Id</td>
                            <td>@change.Description</td>
                            <td>@userEmails[change.UserId]</td>
                            <td>@change.Status</td>
                            <td>@change.MunicipalityName</td>
                            <td>@change.CountyName</td>
                            <td>@change.MapVariant</td>
                            <td>
                                <div class="edit-delete-links">
                                    <a asp-controller="GeoChanges" asp-action="Edit" asp-route-id="@change.Id" asp-route-returnUrl="@Url.Action("Index", "GeoChanges")">Rediger</a> |
                                    <a asp-controller="GeoChanges" asp-action="Delete" asp-route-id="@change.Id" asp-route-returnUrl="@Url.Action("Index", "GeoChanges")">Slett</a>

                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div> *@



    @section Scripts {
        <!-- Important to include Leaflet CSS and JS -->
        <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
        <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

        <script>
            // Initialize the map and set its initial view
            var map = L.map('map').setView([2.995472, 58.146768], 13);  // Adjust the coordinates and zoom level as needed

            // Add a tile layer (using OpenStreetMap)
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors'
            }).addTo(map);

            // Iterate over the registered changes and add them to the map
            // var changes = @Html.Raw(Json.Serialize(Model));
            var changes = @Json.Serialize(Model);

            changes.forEach(function (change) {
                // Parse the GeoJSON data and add it to the map
                var geoJsonData = JSON.parse(change.geoJson);
                L.geoJSON(geoJsonData).addTo(map);

                // Optionally, bind a popup with the change description
                var layer = L.geoJSON(geoJsonData).bindPopup(change.description);
                layer.addTo(map);
            });
        </script>
}